 
 how to send data as whole object to9 array :- below are 2 methods
First :- expand array inside the parent array [] to wrap inside as objects
 <div
          className="cursor-pointer"
          onClick={() => setArray([...array, obj])}  // concat array and obj inside array
        >
          new
        </div>

        Second:- concat elements with empty array
        <div
          className=""
          onClick={() => setArray([].concat(newValues, ...array))}  /// it wil concat newvalues and array with empty [] array
        >
          value
        </div>



        // string to number
        var a = parseInt("10") + "<br>";


        //Status code:-
        https://developer.mozilla.org/en-US/docs/Web/HTTP/Status


//wrong
respData.filter((filtItem) =>
                    setViewFilter(filtItem?.id === item?.id)

//right
         setViewFilter(() =>
                    respData.filter((filtItem) => filtItem?.id === item?.id)
                  );


                  homework(get method of axios)
                  https://jsonplaceholder.typicode.com/todos/1

                  https://jsonplaceholder.typicode.com/photos

                  https://jsonplaceholder.typicode.com/

                  https://jsonplaceholder.typicode.com/comments?postId=1



                  https://www.digitalocean.com/community/tutorials/react-axios-react

//Api calling practice
                  https://reqres.in/


//Creating empty object,then assining values to it

    const HandleSubmit = () => {
    const userData = {};
    userData.name = name;

    console.log(`userData`, userData);
    if (userData) {
      ReqPost(userData);
    }
    // delete userData.name;
  };

  // there is userData = users, users works like container of userData , u can also pass userData as a parameter here

  const ReqPost = (users) => {
    console.log(`users`, users);
    axios
      .post(`https://jsonplaceholder.typicode.com/users`, { users })
      .then((response) => {
        console.log(`response`, response);

        // if (response.status === 201) {
        //   axios
        //     .get(`https://jsonplaceholder.typicode.com/users`)
        //     .then((response) => {
        //       console.log(`response22`, response);
        setResPost(response.data);
        setStatus(response.status);
        setLoading(false);
        setName("")
        //     });
        // }
      });
  };

//for animated svg --  https://codepen.io/nikhil8krishnan/pen/rVoXJa  

//svg animation setup
 <svg
                    version='1.1'
                    id='L9'
                    xmlns='http://www.w3.org/2000/svg'
                    style={{ display: 'inline' }}
                    height='1rem'
                    width='20px'
                    viewBox='0 0 100 100'
                    enableBackground='new 0 0 0 0'
                  >
                    <path
                      fill='black'
                      d='M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50'
                    >
                      <animateTransform
                        attributeName='transform'
                        attributeType='XML'
                        type='rotate'
                        dur='1s'
                        from='0 50 50'
                        to='360 50 50'
                        repeatCount='indefinite'
                      />
                    </path>
                  </svg>




                  // GIT
                  1 https://docs.github.com/en/github/getting-started-with-github/setting-your-username-in-git



                  // while facing error in installing a new third party library
                  1 . npm cache clean --force

                  2. npm i -g npm

                  3. npm cache verify

                  4. npm i
                   5. npm i react-router-dom

//React Router Dom usage

                   https://reactrouter.com/web/guides/quick-start

//Updation of Router Dom usage Please read

https://blog.logrocket.com/migrating-react-router-v6-complete-guide/

//For form design inbuild templates (antd forms)

                   https://ant.design/components/form/
 ///for select button
                   https://ant.design/components/select/

                   /// import 'Option' from select using object destructuring inside main function component

                   import { Button, Form, Select } from 'antd';

const SelectDesign = () => {
  const { Option } = Select;   <=====

  ///antd modal
  https://ant.design/components/modal/#header

// for setting default initial values in the form 
syntex-- form.setFieldsValue({ form.item name: value})

useEffect(() => {
    form.setFieldsValue({
      Age: 10,       //Age is particular form.item name field (name="Age")
    });
  }, []);

//for reseting form.item values in the field
   form.resetFields();

//for giving html element inside footer prop of Modal
syntax-- <Modal footer={[<>]} > <Modal/>
    footer={[
        <div>
          {/* <a href='/index.jsx'>Already have an account? Login here</a> */}
          <Button type='link' onClick={() => setEditProfileVisible(false)}>
            Already have an account? Login here
          </Button>
        </div>,
      ]}

//grid responsive
       {/* container mx-auto are tailwind classes */}
        <div className="container mx-auto">  
          <Row gutter={[24, 12]}>
            <Col className="border" span={12}>Col 1</Col>
            <Col className="border" span={12}>Col 2</Col>
          </Row>
        </div>
        <div className="container mx-auto">
        {/* 24 is full screen width (horizontal spacing)in a row and 12 (vertical spacing)is spacing between components whenever a page comes to smaller screens (responsive) */}
          <Row gutter={[24,12]}>      
            <Col  xl={12} lg={12} md={12} sm={24} xs={24}><div className="border"> Col 1</div></Col>
            <Col  xl={12} lg={12} md={12} sm={24} xs={24} ><div className="border"> Col 2</div></Col>
          </Row>
        </div>


//Api calling task

website--> https://randomuser.me/
Api-->     https://randomuser.me/api


//onClick event does not works directly on table in Antdesign.but it works under onRow event of table
//Declaration is below
<Table
              columns={columns}
              dataSource={dataArray}
       ==>       onRow={(record) => {
                return {
      ==>            onClick: (event) => {
                    event.stopPropagation();     <== this function stopPropagation stops any unusfull events which is not required
                    console.log(record);
                  }, // mouse leave row
                };
              }}
            ></Table>


///How to show message.success part after message.loading and deleting row

             //popconfirm part
useEffect(() => {
    setDataArrayLength(dataArray?.length) ///it will store the previous higher length
    if (deleteLoading) {
      message.loading("Deleting");
    }
    if (dataArray?.length < dataArrayLength) {
      message.success(`Record has been deleted`);
    }
  }, [deleteLoading]);
  const confirm = (record) => {
    if (!deleteLoading) {
      setDeleteLoading(true);
    }
    //query
    // console.log(`event`, event)
    console.log(`delYes`, record);

    setTimeout(() => {
      setDataArray(
        dataArray?.filter((filData) => filData?.key !== record?.key)
      );
      setDeleteLoading(false);
      
    }, 2500);
  };

  //Select's label property link

  https://codesandbox.io/s/antd-reproduction-template-tk678?file=/index.js


  //sending event and username as a prop in function callback simultaneously
  
    onConfirm={(event)=>{
                console.log(`event`, event)
                inviteConfirm(inviteDrawerData?.name,event)}}



     //////  just follow this code : use useRef hook and assign a Ref to Carousel and then call next and prev method by refrence.
/// link for this example-- https://stackoverflow.com/questions/44114224/react-js-antd-carousel-with-arrows
import React, { useRef, Fragment } from "react";
import { Carousel } from "antd";

const MyCarousel = () => {
const slider = useRef(null);

return ( 
<Fragment >
    <Button onClick={() => slider.current.next()}>next</Button>  
    <Carousel ref={slider}>
        <div>Item 1</div>
        <div>Item 2</div>
        <div>Item 3</div>
    </Carousel>
    <Button onClick={() => slider.current.next()}>next</Button>
</Fragment >
)}

explanation- //slider--click on that componnet whose ref is slider //.current- focus on whose current part //.next- then move to next part



npm create umi myApp

//import icons from antd
import { MehTwoTone } from "@ant-design/icons";